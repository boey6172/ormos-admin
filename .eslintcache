[{"D:\\node init\\ormos-admin\\src\\index.js":"1","D:\\node init\\ormos-admin\\src\\reportWebVitals.js":"2","D:\\node init\\ormos-admin\\src\\App.js":"3","D:\\node init\\ormos-admin\\src\\config\\firebase.js":"4","D:\\node init\\ormos-admin\\src\\main\\main.js":"5","D:\\node init\\ormos-admin\\src\\main\\menuButton.js":"6","D:\\node init\\ormos-admin\\src\\main\\history.js":"7","D:\\node init\\ormos-admin\\src\\main\\navBar.js":"8","D:\\node init\\ormos-admin\\src\\store\\stores.js":"9","D:\\node init\\ormos-admin\\src\\store\\storeForm.js":"10","D:\\node init\\ormos-admin\\src\\instance\\instance.js":"11","D:\\node init\\ormos-admin\\src\\store\\displayStores.js":"12","D:\\node init\\ormos-admin\\src\\store\\storeCard.js":"13","D:\\node init\\ormos-admin\\src\\riders\\riders.js":"14","D:\\node init\\ormos-admin\\src\\riders\\form.js":"15","D:\\node init\\ormos-admin\\src\\riders\\riderList.js":"16","D:\\node init\\ormos-admin\\src\\helper.js":"17","D:\\node init\\ormos-admin\\src\\product\\product.js":"18","D:\\node init\\ormos-admin\\src\\product\\form.js":"19","D:\\node init\\ormos-admin\\src\\product\\productList.js":"20"},{"size":528,"mtime":1608182404575,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":2778,"mtime":1611913893666,"results":"24","hashOfConfig":"22"},{"size":619,"mtime":1612276071337,"results":"25","hashOfConfig":"22"},{"size":561,"mtime":1608261843676,"results":"26","hashOfConfig":"22"},{"size":0,"mtime":1608261558905,"results":"27","hashOfConfig":"22"},{"size":0,"mtime":1608261588125,"results":"28","hashOfConfig":"22"},{"size":3423,"mtime":1611913830598,"results":"29","hashOfConfig":"22"},{"size":3528,"mtime":1611887938442,"results":"30","hashOfConfig":"22"},{"size":5239,"mtime":1611887063086,"results":"31","hashOfConfig":"22"},{"size":124,"mtime":1608264769305,"results":"32","hashOfConfig":"22"},{"size":1006,"mtime":1611887226630,"results":"33","hashOfConfig":"22"},{"size":1503,"mtime":1611887231915,"results":"34","hashOfConfig":"22"},{"size":4865,"mtime":1611835009810,"results":"35","hashOfConfig":"22"},{"size":3485,"mtime":1612155449876,"results":"36","hashOfConfig":"22"},{"size":2791,"mtime":1611389173455,"results":"37","hashOfConfig":"22"},{"size":1310,"mtime":1611888034949,"results":"38","hashOfConfig":"22"},{"size":5609,"mtime":1614665217689,"results":"39","hashOfConfig":"22"},{"size":7839,"mtime":1614665237499,"results":"40","hashOfConfig":"22"},{"size":2785,"mtime":1612768843619,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"11f6zeq",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"76","usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"D:\\node init\\ormos-admin\\src\\index.js",[],["91","92"],"D:\\node init\\ormos-admin\\src\\reportWebVitals.js",[],"D:\\node init\\ormos-admin\\src\\App.js",[],"D:\\node init\\ormos-admin\\src\\config\\firebase.js",[],"D:\\node init\\ormos-admin\\src\\main\\main.js",["93"],"import React, { useState }from 'react';\r\n// import VerifyForm from '../verify/verifyForm';\r\n// import MenuButton from './menuButton'\r\n// import History from './history'\r\n\r\n\r\n\r\nconst Main = (props) =>{\r\n  var[orderObject,setOrderObject] = useState(true);\r\n  \r\n if(orderObject){\r\n    return(\r\n    <>\r\n      <div className=\"App\">\r\n       \r\n      <div> Welcome , {props.user.displayName}</div>\r\n       {/* <div><MenuButton /></div>\r\n       <div><History /></div> */}\r\n\r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default Main\r\n\r\n","D:\\node init\\ormos-admin\\src\\main\\menuButton.js",[],"D:\\node init\\ormos-admin\\src\\main\\history.js",[],"D:\\node init\\ormos-admin\\src\\main\\navBar.js",["94","95","96","97"],"\r\nimport React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography ,Fab ,Button,Menu ,MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Drawer } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nconst signOut = () =>{\r\n  firebase.auth().signOut().then(function() {\r\n    console.log('Successfully Signed out')\r\n  }).catch(function(){\r\n    console.log('error Signed out')\r\n  })\r\n}\r\n\r\nconst AppBarMenu = (props) =>{\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  \r\n\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n  \r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n\r\n      <Divider />\r\n        <List>\r\n        <ListItem button>\r\n              <ListItemIcon><HomeIcon /> </ListItemIcon>\r\n              <Link to=\"/\">Home</Link>\r\n        </ListItem>\r\n        <ListItem button>\r\n              <ListItemIcon><StoreIcon /> </ListItemIcon>\r\n              <Link to=\"/stores\">Stores</Link>\r\n        </ListItem>\r\n        <Link to=\"/product\">\r\n        <ListItem button>\r\n          <ListItemIcon><StoreIcon /> </ListItemIcon>\r\n          Product\r\n        </ListItem>\r\n        </Link>\r\n        <Link to=\"/riders\">\r\n        <ListItem button>\r\n              <ListItemIcon><MotorcycleIcon /> </ListItemIcon>\r\n              Riders\r\n        </ListItem>\r\n        </Link>\r\n        <ListItem button>\r\n          <ListItemIcon><ExitToAppIcon /> </ListItemIcon>\r\n          <Link onClick={signOut}>Log Out</Link>\r\n        </ListItem>\r\n\r\n        </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return(\r\n  <>\r\n  <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" aria-haspopup=\"true\" onClick={toggleDrawer('left', true)}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" >\r\n        ORMOS\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>\r\n\r\n\r\n      {/* ///THIS IS WHERE THEY APPEAR */}\r\n  <div>\r\n    {['left'].map((anchor) => (\r\n      <React.Fragment key={'left'}>\r\n        <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\r\n          {list('left')}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    ))}\r\n  </div>  \r\n  </>\r\n\r\n  \r\n  )\r\n} \r\n\r\n\r\n\r\nexport default AppBarMenu","D:\\node init\\ormos-admin\\src\\store\\stores.js",[],"D:\\node init\\ormos-admin\\src\\store\\storeForm.js",["98","99","100","101"],"import React , {useState,useEffect} from 'react';\r\nimport { TextField, Button, MenuItem, Select ,InputLabel ,InputAdornment  } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst StoreForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return ( \r\n    <>\r\n     <form className={classes.container} autoComplete=\"off\" onSubmit={props.handlePost} noValidate>\r\n     <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            {/* <MotorcycleIcon /> */}\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField\r\n            type = \"text\"\r\n            id = \"storeName\"\r\n            name = \"storeName\"\r\n            label = \"Store Name\"\r\n            // className = {classes.textField}\r\n            placeholder = \"Enter Store Name \"\r\n            value={props.values.storeName}\r\n            onChange = {props.handelInputChange} \r\n            margin=\"normal\"\r\n            // fullWidth\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              type = \"tel\"\r\n              id = \"contactNumber\"\r\n              name = \"contactNumber\"\r\n              label = \"Contact Number\"\r\n              // className = {classes.textField}\r\n              placeholder = \"Enter Contact Number \"\r\n              value={props.values.contactNumber}\r\n              onChange = {props.handelInputChange} \r\n              margin=\"normal\"\r\n              // fullWidth\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n          <TextField\r\n                type = \"text\"\r\n                id = \"address\"\r\n                name = \"address\"\r\n                label = \"Address\"\r\n                // className = {classes.textField}\r\n                placeholder = \"Enter Address \"\r\n                value={props.values.address}\r\n                onChange = {props.handelInputChange} \r\n                margin=\"normal\"\r\n                // fullWidth\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <TextField\r\n              type = \"time\"\r\n              id = \"storeHourOpen\"\r\n              defaultValue=\"07:30\"\r\n              name = \"storeHourOpen\"\r\n              label = \"Store Hour Openning\"\r\n              className = {classes.textField}\r\n              // placeholder = \" Enter Store Hour Openning \"\r\n              value={props.values.storeHourOpen}\r\n              onChange = {props.handelInputChange} \r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputProps={{\r\n                step: 300, // 5 min\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              type = \"time\"\r\n              id = \"storeHourClose\"\r\n              defaultValue=\"20:00\"\r\n              name = \"storeHourClose\"\r\n              label = \"Store Hour Close\"\r\n              className = {classes.textField}\r\n              // placeholder = \" Enter Store Hour Openning \"\r\n              value={props.values.storeHourClose}\r\n              onChange = {props.handelInputChange} \r\n              margin=\"normal\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n              inputProps={{\r\n                step: 300, // 5 min\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              accept=\"image/*\"\r\n              style={{display:'none'}}\r\n              name={props.values.logo}\r\n              id=\"contained-button-file\"\r\n              type=\"file\"\r\n              onChange = {props.handleChange}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              component=\"span\"\r\n              >\r\n                Upload Logo\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <Select\r\n              labelId=\"Store type\"\r\n              id=\"storetype\"\r\n              label=\"store type\"\r\n              value={props.values.storetype}\r\n              onChange={props.handleChangeType}\r\n            >\r\n              <MenuItem value={\"Local\"}>Local</MenuItem>\r\n              <MenuItem value={\"FastFood\"}>FastFood</MenuItem>\r\n            </Select>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button  type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            {props.currentId === ''?\"Save\":\"Update\"}\r\n            </Button> \r\n          </Grid>\r\n          <Grid item>\r\n            <Button  type=\"button\" variant=\"contained\" color=\"default\" onClick={()=> props.handleClear()}>\r\n              Clear\r\n            </Button> \r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      </form>\r\n    </>\r\n   );\r\n}\r\n \r\nexport default StoreForm;","D:\\node init\\ormos-admin\\src\\instance\\instance.js",[],"D:\\node init\\ormos-admin\\src\\store\\displayStores.js",["102","103"],"import React,{ useState}from 'react';\r\nimport Card from './storeCard';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst DisplayStores = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n    const cardComponent = props.results.stores.map((store ,i) => {\r\n      return( <Card \r\n        key={i} \r\n        id={ store.id} \r\n        storeName={(store.storeName !== null ? store.storeName : 'yehey')} \r\n        logo={store.logo}\r\n        storetype={(store.storetype !== null ? store.storetype : 'yehey')}\r\n        handleRemove={props.handleRemove}\r\n        handleGetData={props.handleGetData}\r\n\r\n      />\r\n      );  \r\n    })\r\n    return( \r\n      <div>\r\n      <div className=\"content-container\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Grid container justify=\"center\" spacing={1}>\r\n              {cardComponent} \r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n      </div>\r\n      </div>\r\n    )\r\n\r\n  \r\n}\r\n\r\n \r\nexport default DisplayStores;","D:\\node init\\ormos-admin\\src\\store\\storeCard.js",["104","105","106","107"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst StoreCard = (props) =>{\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n\r\n\r\n  const {storeName, logo, id, storetype,handleClickOpen} = props;\r\n  return(\r\n  <>\r\n   <Grid key={storeName} item>\r\n    <Card className={classes.root}>\r\n    <CardContent>\r\n      {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        store\r\n      </Typography> */}\r\n      <img alt='robots' src={logo}  className='content-image' />\r\n      <div className='tc'>\r\n        <h2>{storeName}</h2>\r\n        <p>{storetype}</p> \r\n         asdasd\r\n      </div>\r\n    </CardContent>\r\n      <CardActions>\r\n        <Button onClick={() => props.handleGetData(id)} variant=\"contained\" color=\"secondary\">\r\n          update\r\n        </Button>\r\n        <Button onClick={() => props.handleRemove(id)} variant=\"contained\" color=\"default\">\r\n          Delete\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n    </Grid>\r\n</>\r\n  );\r\n}\r\n\r\nexport default StoreCard;","D:\\node init\\ormos-admin\\src\\riders\\riders.js",["108","109"],"import React, {useState,useEffect} from 'react';\r\nimport Form from './form';\r\nimport List from './riderList';\r\nimport instance from '../instance/instance';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { storage } from '../config/firebase'\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\n \r\nconst Riders = () => {\r\n\r\n\r\n\r\n  const classes = useStyles();\r\n  const initialFieldValues = {\r\n    riderName:'',\r\n    rating:'',\r\n    pic:'',\r\n    contactNumber:'',\r\n    link:'',\r\n    createdDate:'',\r\n    updatedDate:''\r\n  } \r\n  const errMessage={\r\n    error:false,\r\n    errorMessage:''\r\n  }\r\n  var [errors,setErrors ] =  useState(errMessage)\r\n  var [values,setValues ] =  useState(initialFieldValues)\r\n  var [riders,setRiders] = useState(null)\r\n  var [currentId,setCurrentId] = useState('')\r\n\r\n  const handelInputChange = e =>{\r\n    var { name,value }= e.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    })\r\n \r\n   \r\n  }\r\n  const getDate =async ()=>{\r\n\r\n    var  datestamp = await new firebase.firestore.Timestamp.now;\r\n    setValues({\r\n      ...values,\r\n      createdDate: datestamp.seconds,\r\n      updatedDate: datestamp.seconds,\r\n    })\r\n    // return yehey\r\n  }\r\n\r\n  const handlePost = e =>{\r\n    e.preventDefault()\r\n      let isError=false;\r\n      if(values.riderName === \"\")\r\n      {\r\n        isError=true\r\n        setErrors({\r\n          error:true,\r\n          errorMessage:{ riderName: \"Cannot be Empty\"}\r\n        })\r\n      }\r\n      if(values.contactNumber === \"\" || isNaN(values.contactNumber))\r\n      {\r\n        isError=true\r\n        if(values.contactNumber === \"\"){\r\n          setErrors(prev => ({\r\n            ...prev,\r\n            error: true,\r\n            errorMessage: {\r\n              ...prev.errorMessage,\r\n              contactNumber: \"Cannot be Empty\"\r\n            }\r\n          }));\r\n        }\r\n        if(isNaN(values.contactNumber)){\r\n          setErrors(prev => ({\r\n            ...prev,\r\n            error: true,\r\n            errorMessage: {\r\n              ...prev.errorMessage,\r\n              contactNumber: \"This Must Be a number\"\r\n            }\r\n          }));\r\n        }\r\n      }\r\n      \r\n      if(!isError) {\r\n        if(currentId===''){\r\n          instance.post(\"./riders.json\", values).then((response) => {\r\n            console.log(response)\r\n            refresh();\r\n            handleClear();\r\n          }) \r\n        }\r\n        else\r\n        {\r\n          instance.put(`riders/${currentId}.json`, values).then((response) => {\r\n            refresh();\r\n            handleClear();\r\n          })\r\n        }\r\n      }\r\n  }\r\n\r\n  useEffect(()=> {\r\n    // getDate();\r\n    refresh();\r\n  },[])\r\n\r\n  const handleRemove = (id) =>{\r\n    instance.delete(`./riders/${id}.json`).then((response)=>{\r\n      refresh();\r\n      handleClear();\r\n    })\r\n  }\r\n  const handleGetData = (id) =>{\r\n    const rider= riders.riders.find((rider)=>rider.id === id)\r\n    // console.log(rider);\r\n    setCurrentId(id)\r\n    setValues({\r\n      ...rider\r\n    })\r\n    // getDate();\r\n  }\r\n  const handleClear = () =>{\r\n    setCurrentId('')\r\n    setValues({\r\n      ...initialFieldValues\r\n    })\r\n    setErrors({\r\n      error:false,\r\n      errorMessage:''\r\n    })\r\n  }\r\n  const clickClear = e =>{\r\n    e.preventDefault()\r\n    handleClear();\r\n    // getDate();\r\n\r\n  }\r\n\r\n  const refresh = ()=>{\r\n    instance.get(\"riders.json\").then((response)=>{\r\n      const getData=[];\r\n      for (let key in response.data){\r\n          getData.push({...response.data[key], id: key})\r\n        }\r\n      setRiders({\r\n        riders:getData\r\n      })\r\n    })\r\n    getDate();\r\n  }\r\n\r\n  const handleChange = async(e) =>{\r\n    if(e.target.files[0]){\r\n      const image = e.target.files[0];\r\n      const storageRef = storage.ref(`riders/${image.name}`)\r\n      await storageRef.put(image)\r\n      storageRef.getDownloadURL().then((url) => {\r\n        setValues({\r\n          ...values,\r\n          pic:url\r\n      });\r\n      });\r\n    }\r\n   \r\n  }\r\n\r\n\r\n\r\n\r\nif(riders){\r\n    return (\r\n    <>\r\n    <div className=\"App\"><h1>Riders</h1></div>\r\n      <Form \r\n        handlePost={handlePost}\r\n        handelInputChange={handelInputChange}\r\n        values={values}\r\n        currentId={currentId}\r\n        handleClear={clickClear}\r\n        errors={errors}\r\n        handleChange={handleChange}\r\n      />\r\n      <List \r\n        riders={riders}\r\n        handleRemove= {handleRemove} \r\n        handleGetData= {handleGetData}  \r\n\r\n\r\n      />\r\n    </> \r\n  );\r\n}\r\nelse{\r\n  return (\r\n  <div>\r\n    <Backdrop className={classes.backdrop} open='true' >\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  </div>\r\n  )\r\n}\r\n\r\n}\r\n \r\nexport default Riders;","D:\\node init\\ormos-admin\\src\\riders\\form.js",["110"],"import React,{Linking} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MotorcycleIcon from '@material-ui/icons/Motorcycle';\r\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst Form = (props) => {\r\n  const classes = useStyles();\r\n  return ( \r\n    <>\r\n    <form className={classes.container} autoComplete=\"off\" onSubmit={props.handlePost} noValidate>\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <MotorcycleIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField \r\n              error={!!props.errors.errorMessage.riderName}\r\n              required\r\n              name=\"riderName\" \r\n              label=\"Rider Name\" \r\n              onChange={props.handelInputChange}\r\n              value={props.values.riderName }\r\n              helperText={props.errors.errorMessage.riderName && props.errors.errorMessage.riderName}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n            <ContactPhoneIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField \r\n              error={!!props.errors.errorMessage.contactNumber}\r\n              type=\"tell\"\r\n              name=\"contactNumber\" \r\n              label=\"Contact Number \" \r\n              onChange={props.handelInputChange}\r\n              value={props.values.contactNumber}\r\n              helperText={props.errors.errorMessage.contactNumber&&props.errors.errorMessage.contactNumber}\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              accept=\"image/*\"\r\n              style={{display:'none'}}\r\n              name={props.values.pic}\r\n              id=\"contained-button-file\"\r\n              type=\"file\"\r\n              onChange = {props.handleChange}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              component=\"span\"\r\n              >\r\n                Upload Picture\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div className={classes.margin}>\r\n        <Grid container spacing={1} alignItems=\"flex-end\">\r\n          <Grid item>\r\n              <ChatIcon />\r\n          <TextField\r\n            name=\"link\"\r\n            label=\"Messenger Link\"\r\n            // value={value}\r\n            onChange={props.handelInputChange}\r\n            value={props.values.link}\r\n          />\r\n          </Grid>\r\n          <Grid item>\r\n            <Button  type=\"submit\"  variant=\"contained\" color={props.currentId === ''?\"primary\":\"secondary\"} >\r\n             {props.currentId === ''?\"Save\":\"Update\"}\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            <Button   onClick={props.handleClear} variant=\"contained\" colort=\"default\" >\r\n            Clear\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n\r\n      </div>\r\n      </form>\r\n \r\n    </>\r\n   );\r\n}\r\n \r\nexport default Form;","D:\\node init\\ormos-admin\\src\\riders\\riderList.js",[],"D:\\node init\\ormos-admin\\src\\helper.js",[],"D:\\node init\\ormos-admin\\src\\product\\product.js",[],"D:\\node init\\ormos-admin\\src\\product\\form.js",["111","112"],"D:\\node init\\ormos-admin\\src\\product\\productList.js",["113"],"import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Helper from '../helper'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst ProductList = (props) => {\r\n  const classes = useStyles();\r\n  return (  \r\n    <>\r\n        <TableContainer component={Paper}>\r\n    <Table className={classes.table} aria-label=\"simple table\">\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell>Picture</TableCell>\r\n          <TableCell>Product Name</TableCell>\r\n          <TableCell align=\"left\">Variation</TableCell>\r\n          <TableCell align=\"right\">Store</TableCell>\r\n          <TableCell align=\"right\">Product Type</TableCell>\r\n          <TableCell align=\"right\">Actions</TableCell>\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>\r\n        { props.products.products.map((product) => (\r\n          <TableRow key={product.id}>\r\n            <TableCell component=\"th\" scope=\"row\">\r\n               <Avatar alt={product.pic} src={product.pic} />\r\n            </TableCell>\r\n            <TableCell align=\"left\">{product.productName}</TableCell>\r\n            <TableCell align=\"right\">\r\n             { product.specification.map((specification) => (\r\n               <TableCell align=\"right\">\r\n                 <div>\r\n                  {specification.size} \r\n                 </div>\r\n                <div>\r\n                  {specification.price}\r\n                </div> \r\n              </TableCell>\r\n              ))\r\n              } \r\n            </TableCell>\r\n            <TableCell align=\"right\">{product.store}</TableCell>\r\n            <TableCell align=\"right\">{product.type}</TableCell>\r\n            <TableCell align=\"right\">\r\n            <Button onClick={() => props.handleGetData(product.id)} variant=\"contained\" color=\"secondary\">\r\n            <UpdateIcon/>\r\n            </Button>\r\n            &nbsp;\r\n            <Button onClick={() => props.handleRemove(product.id)} variant=\"contained\" color=\"secondary\">\r\n               <DeleteIcon/>\r\n            </Button>\r\n\r\n            </TableCell>\r\n\r\n          </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  </TableContainer>\r\n\r\n    \r\n    </>\r\n  );\r\n}\r\n \r\nexport default ProductList;",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":9,"column":19,"nodeType":"120","messageId":"121","endLine":9,"endColumn":33},{"ruleId":"118","severity":1,"message":"122","line":3,"column":51,"nodeType":"120","messageId":"121","endLine":3,"endColumn":54},{"ruleId":"118","severity":1,"message":"123","line":3,"column":56,"nodeType":"120","messageId":"121","endLine":3,"endColumn":62},{"ruleId":"118","severity":1,"message":"124","line":3,"column":63,"nodeType":"120","messageId":"121","endLine":3,"endColumn":67},{"ruleId":"118","severity":1,"message":"125","line":3,"column":69,"nodeType":"120","messageId":"121","endLine":3,"endColumn":77},{"ruleId":"118","severity":1,"message":"126","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"127","line":1,"column":26,"nodeType":"120","messageId":"121","endLine":1,"endColumn":35},{"ruleId":"118","severity":1,"message":"128","line":2,"column":47,"nodeType":"120","messageId":"121","endLine":2,"endColumn":57},{"ruleId":"118","severity":1,"message":"129","line":2,"column":59,"nodeType":"120","messageId":"121","endLine":2,"endColumn":73},{"ruleId":"118","severity":1,"message":"130","line":7,"column":10,"nodeType":"120","messageId":"121","endLine":7,"endColumn":14},{"ruleId":"118","severity":1,"message":"131","line":7,"column":16,"nodeType":"120","messageId":"121","endLine":7,"endColumn":23},{"ruleId":"118","severity":1,"message":"132","line":7,"column":8,"nodeType":"120","messageId":"121","endLine":7,"endColumn":18},{"ruleId":"118","severity":1,"message":"130","line":22,"column":10,"nodeType":"120","messageId":"121","endLine":22,"endColumn":14},{"ruleId":"118","severity":1,"message":"131","line":22,"column":16,"nodeType":"120","messageId":"121","endLine":22,"endColumn":23},{"ruleId":"118","severity":1,"message":"133","line":27,"column":41,"nodeType":"120","messageId":"121","endLine":27,"endColumn":56},{"ruleId":"134","severity":1,"message":"135","line":53,"column":28,"nodeType":"136","messageId":"137","endLine":53,"endColumn":64,"fix":"138"},{"ruleId":"139","severity":1,"message":"140","line":119,"column":5,"nodeType":"141","endLine":119,"endColumn":7,"suggestions":"142"},{"ruleId":"118","severity":1,"message":"143","line":1,"column":15,"nodeType":"120","messageId":"121","endLine":1,"endColumn":22},{"ruleId":"118","severity":1,"message":"144","line":18,"column":8,"nodeType":"120","messageId":"121","endLine":18,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":167,"column":13,"nodeType":"147","endLine":167,"endColumn":28},{"ruleId":"118","severity":1,"message":"148","line":14,"column":8,"nodeType":"120","messageId":"121","endLine":14,"endColumn":14},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'setOrderObject' is assigned a value but never used.","Identifier","unusedVar","'Fab' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'Typography' is defined but never used.","'handleClickOpen' is assigned a value but never used.","new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"151","text":"152"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refresh'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'Linking' is defined but never used.","'UpdateIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Helper' is defined but never used.","no-global-assign","no-unsafe-negation",[1285,1285],"()",{"desc":"154","fix":"155"},"Update the dependencies array to be: [refresh]",{"range":"156","text":"157"},[2875,2877],"[refresh]"]