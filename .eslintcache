[{"D:\\node init\\ormos-admin\\src\\index.js":"1","D:\\node init\\ormos-admin\\src\\reportWebVitals.js":"2","D:\\node init\\ormos-admin\\src\\App.js":"3","D:\\node init\\ormos-admin\\src\\config\\firebase.js":"4","D:\\node init\\ormos-admin\\src\\main\\main.js":"5","D:\\node init\\ormos-admin\\src\\main\\menuButton.js":"6","D:\\node init\\ormos-admin\\src\\main\\history.js":"7","D:\\node init\\ormos-admin\\src\\main\\navBar.js":"8","D:\\node init\\ormos-admin\\src\\store\\stores.js":"9","D:\\node init\\ormos-admin\\src\\store\\storeForm.js":"10","D:\\node init\\ormos-admin\\src\\instance\\instance.js":"11","D:\\node init\\ormos-admin\\src\\store\\displayStores.js":"12","D:\\node init\\ormos-admin\\src\\store\\storeCard.js":"13"},{"size":528,"mtime":1608182404575,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":2692,"mtime":1608262415982,"results":"17","hashOfConfig":"15"},{"size":581,"mtime":1608284249915,"results":"18","hashOfConfig":"15"},{"size":561,"mtime":1608261843676,"results":"19","hashOfConfig":"15"},{"size":0,"mtime":1608261558905,"results":"20","hashOfConfig":"15"},{"size":0,"mtime":1608261588125,"results":"21","hashOfConfig":"15"},{"size":3011,"mtime":1608262515037,"results":"22","hashOfConfig":"15"},{"size":3069,"mtime":1610346622747,"results":"23","hashOfConfig":"15"},{"size":5834,"mtime":1608364662519,"results":"24","hashOfConfig":"15"},{"size":124,"mtime":1608264769305,"results":"25","hashOfConfig":"15"},{"size":1836,"mtime":1609332045077,"results":"26","hashOfConfig":"15"},{"size":1236,"mtime":1609332053629,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"11f6zeq",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},"D:\\node init\\ormos-admin\\src\\index.js",[],["61","62"],"D:\\node init\\ormos-admin\\src\\reportWebVitals.js",[],"D:\\node init\\ormos-admin\\src\\App.js",[],"D:\\node init\\ormos-admin\\src\\config\\firebase.js",[],"D:\\node init\\ormos-admin\\src\\main\\main.js",["63"],"import React, { useState }from 'react';\r\n// import VerifyForm from '../verify/verifyForm';\r\n// import MenuButton from './menuButton'\r\n// import History from './history'\r\n\r\n\r\n\r\nconst Main = (props) =>{\r\n  var[orderObject,setOrderObject] = useState(true);\r\n  \r\n if(orderObject){\r\n    return(\r\n    <>\r\n      <div className=\"App\">\r\n       \r\n      <div> Welcome , {props.user.displayName}</div>\r\n       {/* <div><MenuButton /></div>\r\n       <div><History /></div> */}\r\n\r\n      </div>\r\n    </>\r\n    )\r\n  }\r\n  else{\r\n    return <></>\r\n  }\r\n}\r\n\r\nexport default Main\r\n\r\n","D:\\node init\\ormos-admin\\src\\main\\menuButton.js",[],"D:\\node init\\ormos-admin\\src\\main\\history.js",[],"D:\\node init\\ormos-admin\\src\\main\\navBar.js",["64","65","66","67"],"\r\nimport React from 'react';\r\nimport { AppBar, Toolbar, IconButton, Typography ,Fab ,Button,Menu ,MenuItem } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Drawer } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport StoreIcon from '@material-ui/icons/Store';\r\nimport {Link} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\nconst signOut = () =>{\r\n  firebase.auth().signOut().then(function() {\r\n    console.log('Successfully Signed out')\r\n  }).catch(function(){\r\n    console.log('error Signed out')\r\n  })\r\n}\r\n\r\nconst AppBarMenu = (props) =>{\r\n  const classes = useStyles();\r\n  \r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n  \r\n\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n  \r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n      className={clsx(classes.list, {\r\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n      })}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n\r\n      <Divider />\r\n        <List>\r\n        <ListItem button>\r\n              <ListItemIcon><HomeIcon /> </ListItemIcon>\r\n              <Link to=\"/\">Home</Link>\r\n        </ListItem>\r\n        <ListItem button>\r\n              <ListItemIcon><StoreIcon /> </ListItemIcon>\r\n              <Link to=\"/stores\">Stores</Link>\r\n        </ListItem>\r\n        <ListItem button>\r\n          <ListItemIcon><ExitToAppIcon /> </ListItemIcon>\r\n          <Link onClick={signOut}>Log Out</Link>\r\n        </ListItem>\r\n\r\n        </List>\r\n      <Divider />\r\n    </div>\r\n  );\r\n\r\n  return(\r\n  <>\r\n  <AppBar position=\"static\">\r\n    <Toolbar>\r\n      <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\" aria-haspopup=\"true\" onClick={toggleDrawer('left', true)}>\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Typography variant=\"h6\" >\r\n        ORMOS\r\n      </Typography>\r\n    </Toolbar>\r\n  </AppBar>\r\n\r\n\r\n      {/* ///THIS IS WHERE THEY APPEAR */}\r\n  <div>\r\n    {['left'].map((anchor) => (\r\n      <React.Fragment key={'left'}>\r\n        <Drawer anchor={'left'} open={state['left']} onClose={toggleDrawer('left', false)}>\r\n          {list('left')}\r\n        </Drawer>\r\n      </React.Fragment>\r\n    ))}\r\n  </div>  \r\n  </>\r\n\r\n  \r\n  )\r\n} \r\n\r\n\r\n\r\nexport default AppBarMenu","D:\\node init\\ormos-admin\\src\\store\\stores.js",["68","69"],"import React,{useState,useEffect} from 'react';\r\nimport StoreForm from './storeForm';\r\nimport DisplayStores from './displayStores';\r\nimport instance from '../instance/instance'\r\nimport { toast } from \"react-toastify\";\r\nimport { storage } from '../config/firebase'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst Stores = () => {\r\n  const classes = useStyles();\r\n  const initialFieldValues = {\r\n    storeName:'',\r\n    contactNumber:'',\r\n    email:'',\r\n    address:'',\r\n    storeHourOpen:'',\r\n    storeHourClose:'',\r\n    logo:'',\r\n    storetype:'',\r\n    storeHours:'', \r\n    createdDate:'',\r\n    updatedDate:'',\r\n  } \r\n  \r\n\r\n  var [values,setValues ] =  useState(initialFieldValues)\r\n  var [stores,setStores] = useState(null)\r\n\r\n\r\n  useEffect(()=> {\r\n    instance.get(\"stores.json\").then((response)=>{\r\n\r\n      const getData=[];\r\n      for (let key in response.data){\r\n          getData.push({...response.data[key], id: key})\r\n        }\r\n      setStores({\r\n        stores:getData\r\n      })\r\n      if (stores)\r\n      {\r\n        const filteredStore = stores.filter(robots => {\r\n          return robots.name.toLowerCase().includes(values.store);\r\n        })\r\n      }\r\n    })\r\n  },[])\r\n\r\n const handlePost = e =>{\r\n  e.preventDefault()\r\n    instance.post(\"./stores.json\", values).then((response) => {\r\n      instance.get(\"stores.json\").then((response)=>{\r\n\r\n        const getData=[];\r\n        for (let key in response.data){\r\n            getData.push({...response.data[key], id: key})\r\n          }\r\n        setStores({\r\n          stores:getData\r\n        })  \r\n      })\r\n    }) \r\n  }\r\n\r\n  const handleChangeType = (e) => {\r\n    setValues({\r\n      ...values,\r\n      storetype: e.target.value\r\n  })\r\n  };\r\n\r\n  const handelInputChange = e =>{\r\n    var { name,value }= e.target\r\n    setValues({\r\n      ...values,\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  const handleChange = async(e) =>{\r\n    if(e.target.files[0]){\r\n      const image = e.target.files[0];\r\n      const storageRef = storage.ref(`images/${image.name}`)\r\n      await storageRef.put(image)\r\n      storageRef.getDownloadURL().then((url) => {\r\n        setValues({\r\n          ...values,\r\n          logo:url\r\n      });\r\n      });\r\n    }\r\n    toast.success(\"You added a new Logo!\");\r\n  }\r\nif(stores){\r\n  return ( \r\n    <>\r\n    <div>\r\n      <StoreForm \r\n        values={values}\r\n        handlePost={handlePost}\r\n        handelInputChange={handelInputChange}\r\n        handleChange={handleChange}\r\n        handleChangeType={handleChangeType}\r\n      />\r\n     </div>\r\n     <div>\r\n      <DisplayStores  results={stores}/>\r\n     </div>\r\n     \r\n    </> \r\n  );\r\n}\r\nelse{\r\n  return (\r\n  <div>\r\n    <Backdrop className={classes.backdrop} open='true' >\r\n      <CircularProgress color=\"inherit\" />\r\n    </Backdrop>\r\n  </div>\r\n  )\r\n}\r\n \r\n  \r\n}\r\n \r\nexport default Stores;","D:\\node init\\ormos-admin\\src\\store\\storeForm.js",["70","71","72","73"],"import React , {useState,useEffect} from 'react';\r\nimport { TextField, Button, MenuItem, Select ,InputLabel ,InputAdornment  } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    // display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: 200,\r\n  },\r\n}));\r\n\r\nconst StoreForm = (props) => {\r\n  const classes = useStyles();\r\n\r\n\r\n  return ( \r\n    <>\r\n     <form className={classes.container} autoComplete=\"off\" onSubmit={props.handlePost} noValidate>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2 d-flex justify-content-center\">\r\n            <div className=\"col\">\r\n              <TextField\r\n                type = \"text\"\r\n                id = \"storeName\"\r\n                name = \"storeName\"\r\n                label = \"Store Name\"\r\n                className = {classes.textField}\r\n                placeholder = \"Enter Store Name \"\r\n                value={props.values.storeName}\r\n                onChange = {props.handelInputChange} \r\n                margin=\"normal\"\r\n                // fullWidth\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-2 d-flex justify-content-center\">\r\n            <div className=\"col\">\r\n              <TextField\r\n                type = \"tel\"\r\n                id = \"contactNumber\"\r\n                name = \"contactNumber\"\r\n                label = \"Contact Number\"\r\n                className = {classes.textField}\r\n                placeholder = \"Enter Contact Number \"\r\n                value={props.values.contactNumber}\r\n                onChange = {props.handelInputChange} \r\n                margin=\"normal\"\r\n                // fullWidth\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-2 d-flex justify-content-center\">\r\n            <div className=\"col\">\r\n              <TextField\r\n                type = \"text\"\r\n                id = \"address\"\r\n                name = \"address\"\r\n                label = \"Address\"\r\n                className = {classes.textField}\r\n                placeholder = \"Enter Address \"\r\n                value={props.values.address}\r\n                onChange = {props.handelInputChange} \r\n                margin=\"normal\"\r\n                // fullWidth\r\n              />\r\n            </div>\r\n          </div>\r\n          </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2 d-flex justify-content-center\">\r\n            <div className=\"col\">\r\n              <TextField\r\n                type = \"time\"\r\n                id = \"storeHourOpen\"\r\n                defaultValue=\"07:30\"\r\n                name = \"storeHourOpen\"\r\n                label = \"Store Hour Openning\"\r\n                className = {classes.textField}\r\n                // placeholder = \" Enter Store Hour Openning \"\r\n                value={props.values.storeHourOpen}\r\n                onChange = {props.handelInputChange} \r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-2 d-flex justify-content-center\">\r\n            <div className=\"col\">\r\n              <TextField\r\n                type = \"time\"\r\n                id = \"storeHourClose\"\r\n                defaultValue=\"20:00\"\r\n                name = \"storeHourClose\"\r\n                label = \"Store Hour Close\"\r\n                className = {classes.textField}\r\n                // placeholder = \" Enter Store Hour Openning \"\r\n                value={props.values.storeHourClose}\r\n                onChange = {props.handelInputChange} \r\n                margin=\"normal\"\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n                inputProps={{\r\n                  step: 300, // 5 min\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-md-2 d-flex justify-content-center\">\r\n            <div className=\"col\">\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{display:'none'}}\r\n                \r\n                id=\"contained-button-file\"\r\n                // multiple\r\n                type=\"file\"\r\n                onChange = {props.handleChange}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                component=\"span\"\r\n                >\r\n                  Upload Logo\r\n                </Button>\r\n              </label>\r\n            </div>\r\n          </div>\r\n            <div className=\"col-md-2 d-flex justify-content-center\">\r\n            <div className=\"col\">\r\n              <Select\r\n                labelId=\"Store type\"\r\n                id=\"storetype\"\r\n                value={props.values.storetype}\r\n                onChange={props.handleChangeType}\r\n              >\r\n                <MenuItem value={\"Local\"}>Local</MenuItem>\r\n                <MenuItem value={\"FastFood\"}>FastFood</MenuItem>\r\n              </Select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n        <div className=\"col-md-2  justify-content-center\"></div>\r\n          <div className=\"col-md-4  justify-content-center\">\r\n            <div className=\"col\">\r\n              <Button  type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                Submit\r\n              </Button> \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n   );\r\n}\r\n \r\nexport default StoreForm;","D:\\node init\\ormos-admin\\src\\instance\\instance.js",[],"D:\\node init\\ormos-admin\\src\\store\\displayStores.js",[],"D:\\node init\\ormos-admin\\src\\store\\storeCard.js",["74","75","76","77","78","79"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst StoreCard = (props) =>{\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n\r\n\r\n\r\n  const {storeName, logo, id, storetype,handleClickOpen} = props;\r\n  return(\r\n  <>\r\n    <Card className={classes.root} onClick={()=>{handleClickOpen();}}>\r\n    <CardContent>\r\n      {/* <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n        store\r\n      </Typography> */}\r\n      <img alt='robots' src={logo}  height ='300' width='300' />\r\n      <div className='tc'>\r\n        <h2>{storeName}</h2>\r\n        <p>{storetype}</p> \r\n         asdasd\r\n      </div>\r\n    </CardContent>\r\n    {/* <CardActions>\r\n      <Button size=\"small\">Learn More</Button>\r\n    </CardActions> */}\r\n    </Card>\r\n</>\r\n  );\r\n}\r\n\r\nexport default StoreCard;",["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":9,"column":19,"nodeType":"88","messageId":"89","endLine":9,"endColumn":33},{"ruleId":"86","severity":1,"message":"90","line":3,"column":51,"nodeType":"88","messageId":"89","endLine":3,"endColumn":54},{"ruleId":"86","severity":1,"message":"91","line":3,"column":56,"nodeType":"88","messageId":"89","endLine":3,"endColumn":62},{"ruleId":"86","severity":1,"message":"92","line":3,"column":63,"nodeType":"88","messageId":"89","endLine":3,"endColumn":67},{"ruleId":"86","severity":1,"message":"93","line":3,"column":69,"nodeType":"88","messageId":"89","endLine":3,"endColumn":77},{"ruleId":"86","severity":1,"message":"94","line":51,"column":15,"nodeType":"88","messageId":"89","endLine":51,"endColumn":28},{"ruleId":"95","severity":1,"message":"96","line":56,"column":5,"nodeType":"97","endLine":56,"endColumn":7,"suggestions":"98"},{"ruleId":"86","severity":1,"message":"99","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"100","line":1,"column":26,"nodeType":"88","messageId":"89","endLine":1,"endColumn":35},{"ruleId":"86","severity":1,"message":"101","line":2,"column":47,"nodeType":"88","messageId":"89","endLine":2,"endColumn":57},{"ruleId":"86","severity":1,"message":"102","line":2,"column":59,"nodeType":"88","messageId":"89","endLine":2,"endColumn":73},{"ruleId":"86","severity":1,"message":"103","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":19},{"ruleId":"86","severity":1,"message":"91","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":14},{"ruleId":"86","severity":1,"message":"104","line":7,"column":8,"nodeType":"88","messageId":"89","endLine":7,"endColumn":18},{"ruleId":"86","severity":1,"message":"105","line":20,"column":10,"nodeType":"88","messageId":"89","endLine":20,"endColumn":14},{"ruleId":"86","severity":1,"message":"106","line":20,"column":16,"nodeType":"88","messageId":"89","endLine":20,"endColumn":23},{"ruleId":"86","severity":1,"message":"107","line":25,"column":27,"nodeType":"88","messageId":"89","endLine":25,"endColumn":29},{"ruleId":"82","replacedBy":"108"},{"ruleId":"84","replacedBy":"109"},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'setOrderObject' is assigned a value but never used.","Identifier","unusedVar","'Fab' is defined but never used.","'Button' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'filteredStore' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'stores' and 'values.store'. Either include them or remove the dependency array.","ArrayExpression",["112"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'InputLabel' is defined but never used.","'InputAdornment' is defined but never used.","'CardActions' is defined but never used.","'Typography' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'id' is assigned a value but never used.",["110"],["111"],"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [stores, values.store]",{"range":"115","text":"116"},[1443,1445],"[stores, values.store]"]